services:

  postgres:
    container_name: postgres
    image: postgres:18
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      # If it is necessary to request the use of the environment variable, change to the line below
      # POSTGRES_PASSWORD: ${POSTGRES_PWD:?Environment variable is required}
      POSTGRES_PASSWORD: ${POSTGRES_PWD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-postgres} 
      # The PGDATA environment variable of the image was changed to be version specific in PostgreSQL
      # Later versions will replace 18 with their respective major version 
      # (e.g., /var/lib/postgresql/19/docker for PostgreSQL 19.x)
      PGDATA: /var/lib/postgresql/18/docker
      # If you set POSTGRES_HOST_AUTH_METHOD to trust, then POSTGRES_PASSWORD is not required.
      # POSTGRES_HOST_AUTH_METHOD: ${POSTGRES_HOST_AUTH_METHOD:-trust}       
    volumes:
       - pgdata:/var/lib/postgresql
    ports:
      - "5432:5432"
    networks:
      - postgres
    # Always restart the container if it stops, except that when the container is stopped (manually or otherwise)
    # restart: unless-stopped
  
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@pgadmin.org}
      # If it is necessary to request the use of the environment variable, change to the line below
      # PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:?Environment variable is required}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PWD:-admin}
    depends_on:
      - postgres
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - postgres
    # Always restart the container if it stops, except that when the container is stopped (manually or otherwise)
    # restart: unless-stopped

networks:
  postgres:
    driver: bridge

volumes:
    pgdata:
    pgadmin: